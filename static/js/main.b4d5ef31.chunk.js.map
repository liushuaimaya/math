{"version":3,"sources":["formula.jpeg","util.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["factorial","n","total","Big","i","times","calc","m","u","p","molecular","pow","div","denominator","add","res","k","calcRightDenominator","result","console","log","toString","rules","required","message","layout","labelCol","span","wrapperCol","tailLayout","offset","App","useEffect","document","body","addEventListener","e","preventDefault","passive","useState","setRes","params","setParams","className","onFinish","Number","Item","label","src","formula","type","value","onChange","prev","target","labelAlign","htmlType","onClick","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b4d5ef31.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/formula.1b863f5a.jpeg\";","import Big from \"big.js\";\n\nconst factorial = (n: number) => {\n  let total = Big(1);\n  for (let i = 0; i < n; i++) {\n    total = total.times(n - i);\n  }\n  return total;\n};\n\nconst calcRightDenominator = (m: number, u: number) => {\n  let res = Big(0);\n  for (let k = 0; k <= m - 1; k++) {\n    res = res.add(Big(u).pow(k).div(factorial(k)));\n  }\n  return res;\n};\n\nconst calc = (m: number, u: number) => {\n  const p = u / m;\n  /** 分子 */\n  const molecular = Big(u).pow(m).div(factorial(m));\n  /** 分母 */\n  const denominator = molecular.add(calcRightDenominator(m, u)).times(1 - p);\n  const result = molecular.div(denominator);\n  console.log(\"u ** m / m!\", molecular.toString());\n  console.log(\"u ** m / m! + (1 - p) * ∈(m-1, k=0)u ** k / k!\", denominator.toString());\n  console.log(\"result\", result.toString());\n  return result;\n};\n\nexport { calc };\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, Image, message } from \"antd\";\nimport Big from \"big.js\";\nimport formula from \"./formula.jpeg\";\nimport { calc } from \"./util\";\nimport \"./App.css\";\n\nconst rules = [{ required: true, message: \"Please input parma!\" }];\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nfunction App() {\n  useEffect(() => {\n    document.body.addEventListener(\"touchmove\", (e) => e.preventDefault(), {\n      passive: false,\n    });\n  }, []);\n  const [res, setRes] = useState(\"\");\n  const [params, setParams] = useState({\n    u: \"\",\n    m: \"\",\n  });\n  const onFinish = () => {\n    const res = calc(Number(params.m), Number(params.u));\n    setRes(res.toString());\n  };\n\n  const handleReset = () => {\n    setParams({ u: \"\", m: \"\" });\n    setRes(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <Form onFinish={onFinish} {...layout}>\n        <Form.Item label=\"公式如图：\">\n          <Image src={formula} />\n        </Form.Item>\n        <Form.Item rules={rules} label=\"请输入参数 m:\">\n          <Input\n            type=\"number\"\n            value={params.m}\n            onChange={(e) => setParams((prev) => ({ ...prev, m: e.target.value }))}\n          />\n        </Form.Item>\n        <Form.Item rules={rules} label=\"请输入参数 u:\">\n          <Input\n            type=\"number\"\n            value={params.u}\n            onChange={(e) => setParams((prev) => ({ ...prev, u: e.target.value }))}\n          />\n        </Form.Item>\n        <Form.Item label=\"计算结果: \">\n          <div className=\"result\">{res}</div>\n        </Form.Item>\n        <Form.Item labelAlign=\"right\" {...tailLayout}>\n          <Button className=\"btn\" htmlType=\"reset\" onClick={handleReset}>\n            重置\n          </Button>\n          <Button className=\"btn\" disabled={!params.m || !params.u} type=\"primary\" htmlType=\"submit\">\n            计算\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}