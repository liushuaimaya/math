{"version":3,"sources":["formula.jpeg","util.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["factorial","n","total","i","calc","m","u","p","molecular","res","k","calcRightDenominator","rules","required","message","layout","labelCol","span","wrapperCol","tailLayout","offset","App","useEffect","document","body","addEventListener","e","preventDefault","passive","useState","undefined","setRes","params","setParams","className","onFinish","isNaN","Number","error","Item","label","src","formula","type","value","onChange","prev","target","labelAlign","htmlType","onClick","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6052a08d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/formula.1b863f5a.jpeg\";","const factorial = (n: number) => {\n  let total = 1;\n  for (let i = 0; i < n; i++) {\n    total *= n - i;\n  }\n  return total;\n};\n\nconst calcRightDenominator = (m: number, u: number) => {\n  let res = 0;\n  for (let k = 0; k <= m - 1; k++) {\n    res += u ** k / factorial(k);\n  }\n  return res;\n};\n\nconst calc = (m: number, u: number) => {\n  const p = u / m;\n  /** 分子 */\n  const molecular = u ** m / factorial(m);\n  /** 分母 */\n  const denominator = molecular + (1 - p) * calcRightDenominator(m, u);\n  return molecular / denominator;\n};\n\nexport { calc };\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, Image, message } from \"antd\";\nimport formula from \"./formula.jpeg\";\nimport { calc } from \"./util\";\nimport \"./App.css\";\n\nconst rules = [{ required: true, message: \"Please input parma!\" }];\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nfunction App() {\n  useEffect(() => {\n    document.body.addEventListener(\"touchmove\", (e) => e.preventDefault(), {\n      passive: false,\n    });\n  }, []);\n  const [res, setRes] = useState<number | undefined>(undefined);\n  const [params, setParams] = useState<{ u: string | undefined; m: string | undefined }>({\n    u: undefined,\n    m: undefined,\n  });\n  const onFinish = () => {\n    if (isNaN(Number(params.m))) {\n      message.error(`${params.m} is not number`);\n      setRes(undefined);\n      return;\n    }\n    if (isNaN(Number(params.u))) {\n      message.error(`${params.u} is not number`);\n      setRes(undefined);\n      return;\n    }\n\n    const res = calc(Number(params.m), Number(params.u));\n\n    if (isNaN(res)) {\n      message.error(`参数错误`);\n      setRes(undefined);\n      return;\n    }\n\n    setRes(res);\n  };\n\n  const handleReset = () => {\n    setParams({ u: undefined, m: undefined });\n    setRes(undefined);\n  };\n\n  return (\n    <div className=\"App\">\n      <Form onFinish={onFinish} {...layout}>\n        <Form.Item label=\"公式如图：\">\n          <Image src={formula} />\n        </Form.Item>\n        <Form.Item rules={rules} label=\"请输入参数 m:\">\n          <Input\n            type=\"number\"\n            value={params.m}\n            onChange={(e) => setParams((prev) => ({ ...prev, m: e.target.value }))}\n          />\n        </Form.Item>\n        <Form.Item rules={rules} label=\"请输入参数 u:\">\n          <Input\n            type=\"number\"\n            value={params.u}\n            onChange={(e) => setParams((prev) => ({ ...prev, u: e.target.value }))}\n          />\n        </Form.Item>\n        <Form.Item label=\"计算结果: \">\n          <div className=\"result\">{res}</div>\n        </Form.Item>\n        <Form.Item labelAlign=\"right\" {...tailLayout}>\n          <Button className=\"btn\" htmlType=\"reset\" onClick={handleReset}>\n            重置\n          </Button>\n          <Button className=\"btn\" disabled={!params.m || !params.u} type=\"primary\" htmlType=\"submit\">\n            计算\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}